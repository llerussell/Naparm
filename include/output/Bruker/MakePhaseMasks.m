function handles = MakePhaseMasks(handles, SaveResult)
NumGroups = numel(unique(handles.points.Group));
Points = handles.SLMtargets;

if handles.ComputePhaseMasks_Checkbox.Value
    if SaveResult
        % make save names
        SaveNames = cell(NumGroups, 1);
        for i = 1:ceil(NumGroups)
            SaveNames{i} = [...
                num2str(i,'%03d')...
                '_' handles.data.ExperimentIdentifier ...
                '_' num2str(size(Points{i},1),'%03d') 'Targets' ...
                '_X' num2str(handles.GalvoPositions(i,1),'%03d') ...
                '_Y' num2str(handles.GalvoPositions(i,2),'%03d') ...
                '.tif'];
        end
        
        % make (and save) phase masks
        [PhaseMasks, TransformedSLMTargets] = SLMPhaseMaskMakerCUDA3D(...
            'Points', Points,...
            'Save', true,...
            'SaveDirectory', handles.data.NaparmDirectory,...
            'SaveName', SaveNames,...
            'Do3DTransform', true);
        
    else  % don't save
        % make (but don't save) phase masks
        [PhaseMasks, TransformedSLMTargets] = SLMPhaseMaskMakerCUDA3D(...
            'Points', Points,...
            'Save', false,...
            'Do3DTransform', true);
    end
    
else  % don't make phase masks
    PhaseMasks = repmat({zeros(512,512)},1,NumGroups);
    TransformedSLMTargets = PhaseMasks;
end

handles.PhaseMasks = PhaseMasks;
handles.TransformedSLMTargets = TransformedSLMTargets;

% Update handles structure
guidata(handles.output, handles);
